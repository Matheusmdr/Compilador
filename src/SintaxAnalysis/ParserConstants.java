/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
//Imports do Java

package SintaxAnalysis;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int RSV_PROGRAMA = 5;
  /** RegularExpression Id. */
  int RSV_PROCEDIMENTO = 6;
  /** RegularExpression Id. */
  int RSV_BEGIN = 7;
  /** RegularExpression Id. */
  int RSV_END = 8;
  /** RegularExpression Id. */
  int RSV_IF = 9;
  /** RegularExpression Id. */
  int RSV_THEN = 10;
  /** RegularExpression Id. */
  int RSV_ELSE = 11;
  /** RegularExpression Id. */
  int RSV_WHILE = 12;
  /** RegularExpression Id. */
  int RSV_DO = 13;
  /** RegularExpression Id. */
  int RSV_VAR = 14;
  /** RegularExpression Id. */
  int RSV_FIM = 15;
  /** RegularExpression Id. */
  int TIPO_INT = 16;
  /** RegularExpression Id. */
  int TIPO_BOOLEAN = 17;
  /** RegularExpression Id. */
  int OPERADOR_LOGICO_DIFERENCA = 18;
  /** RegularExpression Id. */
  int OPERADOR_LOGICO_IGUAL_IGUAL = 19;
  /** RegularExpression Id. */
  int OPERADOR_LOGICO_MENOR = 20;
  /** RegularExpression Id. */
  int OPERADOR_LOGICO_MENOR_IGUAL = 21;
  /** RegularExpression Id. */
  int OPERADOR_LOGICO_MAIOR_IGUAL = 22;
  /** RegularExpression Id. */
  int OPERADOR_LOGICO_MAIOR = 23;
  /** RegularExpression Id. */
  int OPERADOR_LOGICO_IGUALDADE = 24;
  /** RegularExpression Id. */
  int OPERADOR_LOGICO_AND = 25;
  /** RegularExpression Id. */
  int OPERADOR_LOGICO_OR = 26;
  /** RegularExpression Id. */
  int OPERADOR_LOGICO_NOT = 27;
  /** RegularExpression Id. */
  int OPERADOR_ARITMETICO_ATRIBUICAO = 28;
  /** RegularExpression Id. */
  int OPERADOR_ARITMETICO_ADICAO = 29;
  /** RegularExpression Id. */
  int OPERADOR_ARITMETICO_SUBTRACAO = 30;
  /** RegularExpression Id. */
  int OPERADOR_ARITMETICO_MULTIPLICACAO = 31;
  /** RegularExpression Id. */
  int OPERADOR_ARITMETICO_DIVISAO = 32;
  /** RegularExpression Id. */
  int PARENTESES_ESQ = 33;
  /** RegularExpression Id. */
  int PARENTESES_DIR = 34;
  /** RegularExpression Id. */
  int SIMBOLO_DOIS_PONTOS = 35;
  /** RegularExpression Id. */
  int SIMBOLO_VIRGULA = 36;
  /** RegularExpression Id. */
  int SIMBOLO_PONTO_E_VIRGULA = 37;
  /** RegularExpression Id. */
  int SIMBOLO_PONTO = 38;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 39;
  /** RegularExpression Id. */
  int IDENTIFICADOR_CHAMADA_PROCEDIMENTO = 40;
  /** RegularExpression Id. */
  int NUMERO_INTEIRO = 41;
  /** RegularExpression Id. */
  int LETRA = 42;
  /** RegularExpression Id. */
  int DIGITO = 43;
  /** RegularExpression Id. */
  int COM = 44;
  /** RegularExpression Id. */
  int COM_MULT = 45;
  /** RegularExpression Id. */
  int COM_MULT_ERRO_ABRIR = 46;
  /** RegularExpression Id. */
  int COMENTARIO_UMA_LINHA = 47;
  /** RegularExpression Id. */
  int COMENTARIO_MULT_LINHAS = 48;
  /** RegularExpression Id. */
  int ERRO_SIMBOLO_INVALIDO_COMENTARIO = 49;
  /** RegularExpression Id. */
  int ERRO_COMENTARIO_MULT_LINHAS_SEM_FECHAR = 50;
  /** RegularExpression Id. */
  int ERRO_COMENTARIO_MULT_LINHAS_SEM_ABRIR = 51;
  /** RegularExpression Id. */
  int ERRO_OVERFLOW_INT = 52;
  /** RegularExpression Id. */
  int ERRO_OVERFLOW_IDENTIFICADOR = 53;
  /** RegularExpression Id. */
  int ERRO_SIMBOLO_INVALIDO = 54;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"program\"",
    "\"procedure\"",
    "\"begin\"",
    "\"end\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"while\"",
    "\"do\"",
    "\"var\"",
    "<RSV_FIM>",
    "\"int\"",
    "\"boolean\"",
    "\"<>\"",
    "\"==\"",
    "\"<\"",
    "\"<=\"",
    "\">=\"",
    "\">\"",
    "\"=\"",
    "\"and\"",
    "\"or\"",
    "\"not\"",
    "\":=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"div\"",
    "\"(\"",
    "\")\"",
    "\":\"",
    "\",\"",
    "\";\"",
    "\".\"",
    "<IDENTIFICADOR>",
    "<IDENTIFICADOR_CHAMADA_PROCEDIMENTO>",
    "<NUMERO_INTEIRO>",
    "<LETRA>",
    "<DIGITO>",
    "<COM>",
    "<COM_MULT>",
    "<COM_MULT_ERRO_ABRIR>",
    "<COMENTARIO_UMA_LINHA>",
    "<COMENTARIO_MULT_LINHAS>",
    "\"/\"",
    "\"{\"",
    "\"}\"",
    "<ERRO_OVERFLOW_INT>",
    "<ERRO_OVERFLOW_IDENTIFICADOR>",
    "<ERRO_SIMBOLO_INVALIDO>",
  };

}
